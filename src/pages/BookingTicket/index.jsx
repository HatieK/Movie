import React, { act, useEffect, useRef, useState } from "react";
import { Col, Empty, Row } from "antd";
import { useSelector } from "react-redux";
import { movieListApi } from "../../apis/movieList.api";
import { useQuery } from "@tanstack/react-query";
import { Link, useParams } from "react-router-dom";
import ComponentLoading from "../../components/Loading";
import moment from "moment/moment";
import { THEATER_DETAIL, THEATER_DETAIL_SEGMENT } from "../../constants/path";

const extractShowtimes = (data) => {
  let result = [];

  data.forEach((heThongRap) => {
    heThongRap.cumRapChieu.forEach((cumRap) => {
      cumRap.lichChieuPhim.forEach((lichChieu) => {
        const { maLichChieu, maRap, tenRap, ngayChieuGioChieu, thoiLuong } =
          lichChieu;
        const ngayChieu = ngayChieuGioChieu.split("T")[0];
        const gioChieu = ngayChieuGioChieu.split("T")[1];
        const { tenCumRap, diaChi } = cumRap;

        result.push({
          maLichChieu,
          maRap,
          tenRap,
          ngayChieu,
          gioChieu,
          thoiLuong,
          tenCumRap,
          diaChi,
        });
      });
    });
  });

  return result;
};

const BookingTicket = () => {
  const {
    data: dataScheduleMovie,
    isLoading: scheduleMovieLoading,
    error: scheduleMovieError,
  } = useQuery({
    queryKey: ["schedule-movie"],
    queryFn: () => movieListApi.getScheduleMovieList(slug),
  });
  const [showTimes, setShowTimes] = useState([]);
  const [uniqueDates, setUniqueDates] = useState([]);
  const [selectedDate, setSelectedDate] = useState("");
  const [scheduleInfo, setScheduleInfo] = useState(null);

  const [dateFiltered, setFiltered] = useState("");

  useEffect(() => {
    if (dataScheduleMovie) {
      const showTimes = extractShowtimes(dataScheduleMovie.heThongRapChieu);
      setShowTimes(showTimes);
      const uniqueDates = [
        ...new Set(showTimes.map((showTime) => showTime.ngayChieu)),
      ];
      setUniqueDates(uniqueDates);
      setSelectedDate(uniqueDates[0]);
    }
  }, [dataScheduleMovie]);

  const { slug } = useParams();
  const { movieId } = useSelector((state) => state.bookingTicket);
  const { data: dataMovieDetail, isLoading: dateMovieDetailLoading } = useQuery(
    {
      queryKey: ["movie-detail", movieId],
      queryFn: () => movieListApi.getDetailMovie(slug),
    }
  );

  if (scheduleMovieLoading) {
    return <ComponentLoading />;
  }

  if (!dataScheduleMovie) {
    return <Empty description="KH√îNG C√ì D·ªÆ LI·ªÜU" />;
  }

  const filterShowTimes = showTimes.filter(
    (showTime) => showTime.ngayChieu === selectedDate
  );
  console.log("üöÄfilterShowTimes---->", filterShowTimes);

  // const    = (dateValue) => {
  //   filterShowTimes.forEach((item) => {
  //     if (item.ngayChieu === dateValue) {
  //       setActiveDate(!activeDate);
  //     } else {
  //       setActiveDate(false);
  //     }
  //   });
  // };

  const handleBookingTicket = (value) => {
    console.log("üöÄvalue---->", value);
  };

  const templateReview =
    "Inception l√† m·ªôt ki·ªát t√°c c·ªßa ƒë·∫°o di·ªÖn Christopher Nolan, mang ƒë·∫øn m·ªôt tr·∫£i nghi·ªám ƒëi·ªán ·∫£nh ƒë·∫ßy k√≠ch th√≠ch v√† s√¢u s·∫Øc. V·ªõi c·ªët truy·ªán ph·ª©c t·∫°p xoay quanh vi·ªác x√¢m nh·∫≠p v√†o gi·∫•c m∆°, phim cu·ªën h√∫t kh√°n gi·∫£ t·ª´ ƒë·∫ßu ƒë·∫øn cu·ªëi. Leonardo DiCaprio th·ªÉ hi·ªán xu·∫•t s·∫Øc vai Dom Cobb, m·ªôt chuy√™n gia tr·ªôm gi·∫•c m∆°, mang ƒë·∫øn s·ª± cƒÉng th·∫≥ng v√† c·∫£m x√∫c m√£nh li·ªát. Hi·ªáu ·ª©ng h√¨nh ·∫£nh v√† √¢m thanh ƒë·ªânh cao, c√πng v·ªõi √¢m nh·∫°c c·ªßa Hans Zimmer, t·∫°o n√™n m·ªôt kh√¥ng gian m∆° ·∫£o v√† ƒë·∫ßy m√™ ho·∫∑c. Inception l√† m·ªôt b·ªô phim kh√¥ng th·ªÉ b·ªè qua cho nh·ªØng ai y√™u th√≠ch ƒëi·ªán ·∫£nh.";

  if (dataMovieDetail) {
    return (
      <div className="bookingTicket main">
        <div className="bookingTicket-movie">
          <div className="container">
            <div className="movie-select">
              <Row>
                <Col span={12}>
                  <div className="movie-image">
                    <img src={dataMovieDetail?.hinhAnh} alt="" />
                  </div>
                </Col>
                <Col span={12}>
                  <Row gutter={[20, 20]} className="movie-info">
                    <Col span={24}>
                      <h1 className="heading">
                        {(dataMovieDetail?.tenPhim).toUpperCase()}
                      </h1>
                    </Col>
                    <Col span={24}>
                      <ul className="info-detail">
                        <li className="info-item">
                          <span className="ic">
                            <img
                              src="../../../public/img/icon-tag.svg"
                              alt=""
                            />
                          </span>
                          <span className="txt">Ho·∫°t H√¨nh</span>
                        </li>
                        <li className="info-item">
                          <span className="ic">
                            <img
                              src="../../../public/img/icon-clock.svg"
                              alt=""
                            />
                          </span>
                          <span className="txt">182'</span>
                        </li>
                      </ul>
                    </Col>
                    <Col span={24}>
                      <div className="detail">
                        <span>M√î T·∫¢</span>
                        <p className="txt">ƒê·∫°o Di·ªÖn: Josh Gordon, Will Speck</p>
                        <p className="txt">
                          Di·ªÖn Vi√™n: Anthony Ramos, Naomi Scott, Kristofer Hivju
                        </p>
                        <p className="txt">
                          Kh·ªüi Chi·∫øu:{" "}
                          {moment(dataMovieDetail?.ngayKhoiChieu).format(
                            "DD/MM/YYYY"
                          )}
                        </p>
                        <div className="detail-content">
                          <h2>N·ªòI DUNG PHIM</h2>
                          <p className="txt">{`${
                            dataMovieDetail?.moTa.length < 50
                              ? templateReview
                              : dataMovieDetail.moTa
                          }}`}</p>
                        </div>
                        <div className="info-action">
                          <a href="" className="booking action-watch">
                            <span className="ic">
                              <img
                                src="../../../public/img/icon-play-vid.svg"
                                alt=""
                              />
                            </span>
                            <span className="text">Xem Trailer</span>
                          </a>
                        </div>
                      </div>
                    </Col>
                  </Row>
                </Col>
              </Row>
              <Col span={24}>
                <div className="detail bookingTicket-mobile">
                  <span>M√î T·∫¢</span>
                  <p className="txt">ƒê·∫°o Di·ªÖn: Josh Gordon, Will Speck</p>
                  <p className="txt">
                    Di·ªÖn Vi√™n: Anthony Ramos, Naomi Scott, Kristofer Hivju
                  </p>
                  <p className="txt">
                    Kh·ªüi Chi·∫øu: {dataMovieDetail?.ngayKhoiChieu}
                  </p>
                  <div className="detail-content">
                    <h2>N·ªòI DUNG PHIM</h2>
                    <p className="txt">{`${
                      dataMovieDetail?.moTa.length < 50
                        ? templateReview
                        : dataMovieDetail.moTa
                    }}`}</p>
                  </div>
                  <div className="info-action">
                    <a href="" className="booking action-watch">
                      <span className="ic">
                        <img
                          src="../../../public/img/icon-play-vid.svg"
                          alt=""
                        />
                      </span>
                      <span className="text">Xem Trailer</span>
                    </a>
                  </div>
                </div>
              </Col>
            </div>
            {dataScheduleMovie.dangChieu === false ? (
              <div className="container-ticket">
                <div className="movie-schedule">
                  <h2 className="heading">L·ªäCH CHI·∫æU</h2>
                  <div className="schedule-list">
                    {uniqueDates.map((item, index) => {
                      return (
                        // <div
                        //   className={`time ${activeDate ? "active" : ""}`}
                        //   key={item}
                        //   onClick={() => handleDateClick(item)}
                        // >
                        //   <p className="time-month">
                        //     {moment(item).format("DD/MM")}
                        //   </p>
                        // </div>
                        <DateTime
                          item={item}
                          isActive={item === dateFiltered}
                          onChange={(item) => setFiltered(item)}
                        />
                      );
                    })}
                  </div>
                </div>
                <div className="theater-list">
                  <h2 className="heading">DANH S√ÅCH R·∫†P</h2>
                  {filterShowTimes.map((item, index) => {
                    const theaterDetail =
                      THEATER_DETAIL + `/${item.maLichChieu}`;
                    return (
                      <div key={index} className="theater-info">
                        <p className="name">{item.tenCumRap}</p>
                        <p className="address">{item.diaChi}</p>
                        <Link
                          className="hour"
                          to={theaterDetail}
                          onClick={() => handleBookingTicket(item.maLichChieu)}
                        >
                          {item.gioChieu}
                        </Link>
                      </div>
                    );
                  })}
                </div>
              </div>
            ) : (
              <div>KH√îNG C√ì L·ªäCH CHI·∫æU</div>
            )}
          </div>
        </div>
      </div>
    );
  }
};

const DateTime = ({ item, onChange, isActive }) => {
  return (
    <div
      className={`time ${isActive ? "active" : ""}`}
      key={item}
      onClick={() => {
        onChange(item);
      }}
    >
      <p className="time-month">{moment(item).format("DD/MM")}</p>
    </div>
  );
};

export default BookingTicket;
